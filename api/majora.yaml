openapi: 3.0.1
info:
  title: Majora
  description: |
    Malleable All-seeing Journal Of Research Artifacts

    Majora is a Django-based wet-and-dry information management system. Majora is being rapidly developed as part of the COVID-19 Genomics UK Consortium (COG-UK) response to the outbreak of SARS-CoV-2.
    <hr>
    
    # Basics
    Majora is a system that stores metadata on biological samples, sequencing runs, bioinformatics pipelines and files. These different items are referred to generally, as "artifacts". Majora is composed of three main parts:

    * a database that defines "models" that represent artifacts such as samples and files,
    * a web interface that allows access to basic metadata shared about artifacts,
    * an "API" that provides an interface for other tools and programs to view and edit information about artifacts

    This documentation is for the API. If you don't plan to write a computer program to use the API and just want to upload metadata, please refer to the documentation for the [metadata uploader](https://metadata.docs.cog-uk.io/) instead.

    ## Requests
    Note that all requests have the following mandatory keys:

    ```json
    {
        "username": 0,
        "token": 0,
    }
    ```

    Where `username` is your COG-UK CLIMB username and `token` is your secret API key.
    If you do not have access to COG-UK CLIMB, [register for a COG-UK account](https://majora.covid19.climb.ac.uk/forms/register).

    Existing users can check their key by logging in and [viewing their profile](https://majora.covid19.climb.ac.uk/accounts/profile).
    **Treat your key as securely as your password. Anyone with your key can perform API actions, as you**.
    <hr>
    
    # Important notes
    
    * Submitting a request for an artifact that already exists will allow you to change some properties of that object. The messages response will let you know if this is not the case.
    * Sending a request to update an artifact that already exists is an overwriting operation. If you submit blank fields, those fields will be irreversibly deleted from the model.
    * If metadata is missing, send a blank field or do not submit the field at all. Do not submit 'unknown' or 'null' or any other text that attempts to explain that the field is missing.
    <hr>

  version: 2.8.1
externalDocs:
  description: Majora on github
  url: 'https://github.com/SamStudio8/majora'
servers:
  - url: 'https://covid.majora.ironowl.it/api/v2/'
tags:
  - name: artifact
    description: Artifacts
  - name: process
    description: Processes
paths:
  /artifact/biosample/add/:
    post:
        tags:
        - artifact
        summary: "Add one or more biosamples to Majora"
        description: ""
        operationId: "api.artifact.biosample.add"
        x-majora-scopes: "majora2.add_biosampleartifact majora2.change_biosampleartifact majora2.add_biosamplesource majora2.change_biosamplesource majora2.add_biosourcesamplingprocess majora2.change_biosourcesamplingprocess"
        x-ocarina-cmd: "put biosample"
        x-ocarina-api: null
        x-uploader-doc: "https://metadata.docs.cog-uk.io/bulk-upload-1/bulk-upload"
        requestBody:
          description: "Biosample to be added to Majora"
          content:
            application/json:
              schema: 
                allOf: 
                  - $ref: '#/components/schemas/Request'
                  - $ref: '#/components/schemas/BiosampleRequest'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/Majora_OK'
          '400':
            description: "General unauthorised or invalid query"
            content: {}
          '500':
            description: "Server sad"
            content: {}
  /artifact/biosample/addempty/:
    post:
        tags:
        - artifact
        summary: "Add one or more empty biosamples to Majora"
        description: ""
        operationId: "api.artifact.biosample.addempty"
        x-majora-scopes: "!majora2.force_add_biosampleartifact majora2.add_biosampleartifact majora2.change_biosampleartifact majora2.add_biosourcesamplingprocess majora2.change_biosourcesamplingprocess"
        x-ocarina-cmd: "empty biosample"
        x-ocarina-api: null
        x-uploader-doc: null
        requestBody:
          description: "Empty Biosample to be added to Majora"
          content:
            application/json:
              schema: 
                allOf: 
                  - $ref: '#/components/schemas/Request'
                  - $ref: '#/components/schemas/EmptyBiosampleRequest'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/Majora_OK'
          '400':
            description: "General unauthorised or invalid query"
            content: {}
          '500':
            description: "Server sad"
            content: {}
  /artifact/biosample/query/validity:
    post:
        tags:
        - artifact
        summary: "Check the status of one or more biosamples in Majora"
        description: ""
        operationId: "api.artifact.biosample.query.validity"
        x-majora-scopes: ""
        x-ocarina-cmd: "get biosample-validity"
        x-ocarina-api: null
        x-uploader-doc: null
        requestBody:
          description: "Biosamples to be checked"
          content:
            application/json:
              schema: 
                allOf: 
                  - $ref: '#/components/schemas/Request'
                  - $ref: '#/components/schemas/BiosampleList'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/BiosampleListReply'
          '400':
            description: "General unauthorised or invalid query"
            content: {}
          '500':
            description: "Server sad"
            content: {}
  /artifact/library/add/:
    post:
      tags:
      - artifact
      summary: "Add a sequencing library to Majora"
      description: ""
      operationId: "api.artifact.library.add"
      x-majora-scopes: "majora2.add_biosampleartifact majora2.change_biosampleartifact majora2.add_libraryartifact majora2.change_libraryartifact majora2.add_librarypoolingprocess majora2.change_librarypoolingprocess"
      x-ocarina-cmd: "put library"
      x-ocarina-api: null
      x-uploader-doc: "https://metadata.docs.cog-uk.io/bulk-upload-1/samples-and-sequencing"
      requestBody:
        description: "Library to be added to Majora"
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Request'
                - $ref: '#/components/schemas/Library'
      responses:
          '200':
            $ref: '#/components/responses/Majora_OK'
          '400':
            description: "General unauthorised or invalid query"
            content: {}
          '500':
            description: "Server sad"
            content: {}
  /process/sequencing/add/:
    post:
      tags:
      - process
      summary: "Add a sequencing run to Majora"
      description: ""
      operationId: "api.process.sequencing.add"
      x-majora-scopes: "majora2.change_libraryartifact majora2.add_dnasequencingprocess majora2.change_dnasequencingprocess"
      x-ocarina-cmd: "put sequencing"
      x-ocarina-api: null
      x-uploader-doc: "https://metadata.docs.cog-uk.io/bulk-upload-1/samples-and-sequencing"
      requestBody:
        description: "Run to be added to Majora"
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Request'
                - $ref: '#/components/schemas/Sequencing'
      responses:
          '200':
            $ref: '#/components/responses/Majora_OK'
          '400':
            description: "General unauthorised or invalid query"
            content: {}
          '500':
            description: "Server sad"
            content: {}
  /group/pag/suppress/:
    post:
      tags:
      - group
      summary: "Suppress a Published Artifact Group (PAG) from the data set"
      description: ""
      operationId: "api.group.pag.suppress"
      x-majora-scopes: "majora2.can_suppress_pags_via_api"
      x-ocarina-cmd: "pag suppress"
      x-ocarina-api: null
      x-uploader-doc: null
      requestBody:
        description: "PAG to be suppressed from Majora"
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Request'
                - $ref: '#/components/schemas/PAGSupressRequest'
      responses:
          '200':
            $ref: '#/components/responses/Majora_OK'
          '400':
            description: "General unauthorised or invalid query"
            content: {}
          '500':
            description: "Server sad"
            content: {}
components:
  responses:
    Majora_OK:
      description: "Success"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseResponse'
    BiosampleListReply:
      description: "Success"
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/BaseResponse'
              - $ref: '#/components/schemas/BiosampleValidityReply'
  schemas:
    Request:
      title: 'auth'
      type: object
      required:
      - username
      - token
      properties:
        username:
          type: string
          example: "majora-sam"
        token:
          type: string
          example: "6e06392f-e030-4cf9-911a-8dc9f2d4e714"
    BaseResponse:
      title: 'response'
      type: object
      properties:
        errors:
          type: integer
        warnings:
          type: integer
        messages:
          type: array
          items:
            oneOf:
              - type: string
              - type: object
          example: ["An important message", {"a_field_name": "A message about this field..."}, "Another important message..."]
          description: "A list of string or object-based messages encountered during your request."
        new:
          type: array
          items:
            type: string
          example: []
          description: "List of tuples in the format (object_type, object_uuid, object_name) for objects created as a result of your request"
        updated:
          type: array
          items:
            type: string
          example: []
          description: "List of tuples in the format (object_type, object_uuid, object_name) for objects updated as a result of your request"
        ignored: 
          type: array
          items:
            type: string
          example: []
          description: "List of UUIDs or string IDs ignored by your request due to errors"
        success:
          type: boolean
          description: "true if errors == 0"
    EmptyBiosample:
      title: 'emptybiosample'
      required:
      - central_sample_id
      type: object
      properties:
        central_sample_id:
          x-ocarina-param: "--central-sample-id"
          x-priority: 0
          type: string
          example: "BIRM-12345"
          description: "The centrally shared ID that you will use to refer to this sample inside the consortium."
        sender_sample_id:
          example: "LAB12345"
          x-ocarina-param: "--sender-sample-id"
          x-priority: 100
          type: string
          description: "If you are permitted, provide the identifier that was sent by your laboratory to SGSS here."
    Biosample:
      title: 'biosample'
      required:
      - central_sample_id
      type: object
      properties:
        central_sample_id:
          x-ocarina-param: "--central-sample-id"
          x-priority: 0
          type: string
          example: "BIRM-12345"
          description: "The centrally shared ID that you will use to refer to this sample inside the consortium."
        biosample_source_id:
          x-ocarina-param: "--biosample-source-id"
          x-ocarina-warning: "Do not provide personally identifying information here. Never use an NHS number."
          x-priority: 100
          example: "ABC12345"
          type: string
          description: |
            A unique identifier of patient or environmental sample. If you have multiple samples from the same patient, enter the FIRST central_sample_id assigned to one of their samples here.
        root_sample_id:
          example: "PHA12345"
          x-ocarina-param: "--root-sample-id"
          x-priority: 100
          type: string
          description: "Identifier assigned to this sample from one of the health agencies (eg. PHE samples will be prefixed with H20). This is necessary for linking samples to private patient metadata later."
        sender_sample_id:
          example: "LAB12345"
          x-ocarina-param: "--sender-sample-id"
          x-priority: 100
          type: string
          description: "If you are permitted, provide the identifier that was sent by your laboratory to SGSS here."
    BiosampleCollection:
      title: 'biosample_collection'
      required: 
      - adm1
      - is_surveillance
      - collection_date
      type: object
      properties:
        adm1:
          type: string
          x-ocarina-param: "--adm1"
          x-priority: 0
          description: "Code of UK home nation of the patient from which the sample was collected"
          enum: ["UK-ENG", "UK-SCT", "UK-WLS", "UK-NIR"]
          example: "UK-ENG"
        adm2:
          type: string
          x-ocarina-param: "--adm2"
          x-priority: 2
          example: "Birmingham"
          description: "The city or county that the patient lives in (avoid abbreviations or short hand)"
        adm2_private:
          type: string
          x-ocarina-param: "--adm2-private"
          example: "B20"
          description: "The outer postcode for the patient's home address (first half of the postcode only)"
        is_surveillance:
          type: string
          x-ocarina-param: "--is-surveillance"
          x-priority: 0
          enum: ["Y", "N"]
          example: "Y"
          description: "Whether this sample was collected under the COGUK surveillance protocol."
        collection_pillar:
          type: integer
          enum: [1, 2, 103, 34613]
          x-ocarina-param: "--collection-pillar"
          x-priority: 100
          example: "2"
          description: "The pillar under which this sample was collected (e.g. 1, 2). This is likely 1, but leave blank if unsure."
        collection_date:
          type: string
          x-ocarina-param: "--collection-date"
          x-priority: 0
          format: date
          example: "2020-06-03"
          nullable: true
          description: "Provide where possible. When collection_date cannot be provided, you must provide received_date instead."
        received_date:
          type: string
          x-ocarina-param: "--received-date"
          x-priority: 1
          format: date
          example: "2020-06-04"
          description: "Date sample was first received by any lab. This date should be as close to possible to collection_date. This date must be provided if collection_date is missing."
        collecting_org:
          type: string
          x-ocarina-param: "--collecting-org"
          x-priority: 100
          description: "The site (eg. hospital or surgery) that this sample was originally collected by."
          example: "Hypothetical University of Hooting"
        sample_type_collected:
          x-ocarina-param: "--sample-type-collected"
          x-priority: 100
          type: string
          example: "swab"
          enum: ["dry swab", "swab", "sputum", "BAL", "aspirate"]
        sample_type_received:
          x-ocarina-param: "--sample-type-received"
          x-priority: 100
          type: string
          example: "primary"
          enum: ["primary", "extract", "culture", "lysate"]
        source_age:
          x-ocarina-param: "--source-age"
          x-priority: 2
          type: integer
          example: "29"
          minimum: 0
          description: "Ages should be whole numbers. Neonatals should be entered as 0."
        source_sex:
          x-ocarina-param: "--source-sex"
          x-priority: 2
          example: "F"
          type: string
          enum: ["F", "M", "Other"]
        swab_site:
          x-ocarina-param: "--swab-site"
          x-priority: 100
          type: string
          enum: ["nose","throat","nose-throat","endotracheal","rectal"]
          example: "nose-throat"
          description: "Required if sample_type_collected is swab"
        is_hcw:
          x-ocarina-param: null
          x-priority: 100
          type: string
          nullable: true
          enum:
            - Y
            - N
            - null
          description: "Whether the sample was collected from a healthcare worker. This includes hospital-associated workers."
        employing_hospital_name:
          type: string
          x-ocarina-param: null
          x-priority: 100
          description: "If is_hcw, provide the name of the employing hospital. If you do not know the name, use HOSPITAL"
        employing_hospital_trust_or_board:
          type: string
          x-ocarina-param: null
          x-priority: 100
          description: "If is_hcw, provide the name of the employing trust or board."
        is_hospital_patient:
          type: string
          x-ocarina-param: null
          x-priority: 100
          nullable: true
          enum: ["Y", "N", null]
        is_icu_patient:
          type: string
          x-ocarina-param: null
          x-priority: 100
          nullable: true
          enum: ["Y", "N", null]
        admitted_date:
          x-ocarina-param: null
          x-priority: 100
          description: "If is_hospital_patient, the date (YYYY-MM-DD) that the patient was admitted to hospital"
          type: string
          format: date
        admitted_hospital_name:
          x-ocarina-param: null
          x-priority: 100
          type: string
          description: "If is_hospital_patient, provide the name of the hospital. If you do not know the name, use HOSPITAL"
        admitted_hospital_trust_or_board:
          x-ocarina-param: null
          x-priority: 100
          type: string
          description: "If is_hospital_patient, provide the name of the trust or board that administers the hospital the patient was admitted to."
        is_care_home_worker:
          x-ocarina-param: null
          x-priority: 100
          type: string
          nullable: true
          enum: ["Y", "N", null]
        is_care_home_resident:
          x-ocarina-param: null
          x-priority: 100
          type: string
          nullable: true
          enum: ["Y", "N", null]
        anonymised_care_home_code:
          x-ocarina-param: null
          x-priority: 100
          description: "A code to represent a particular care home, the mapping of this code to the care home should be kept securely by your organisation. You must take care to select a code that can not link the identity of the care home."
          type: string
          maxLength: 10
        admitted_with_covid_diagnosis:
          x-ocarina-param: null
          x-priority: 100
          description: "If is_hospital_patient, whether the patient was admitted with a COVID diagnosis"
          type: string
          nullable: true
          enum: ["Y", "N", null]
        metrics:
          $ref: '#/components/schemas/Metric'
        metadata:
          $ref: '#/components/schemas/BiosampleMetadata'
    BiosampleRequest:
      title: 'biosample_request'
      type: object
      required:
      - biosamples
      properties:
        biosamples:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Biosample'
              - $ref: '#/components/schemas/BiosampleCollection'
    EmptyBiosampleRequest:
      title: 'empty_biosample_request'
      type: object
      required:
      - biosamples
      properties:
        biosamples:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/EmptyBiosample'
    Library:
      title: 'library'
      type: object
      required:
      - library_name
      - library_layout_config
      - library_seq_kit
      - library_seq_protocol
      - biosamples
      properties:
        library_name:
          x-priority: 0
          type: string
          example: "HOOT-LIBRARY-20200322"
          description: "A unique, somewhat memorable name for your library."
          x-ocarina-param: "--library-name"
        library_layout_config:
          type: string
          x-priority: 0
          enum: ["SINGLE", "PAIRED"]
          x-ocarina-param: "--library-layout-config"
          example: "PAIRED"
        library_seq_kit:
          type: string
          x-priority: 0
          example: "Illumina MiSeq v3"
          x-ocarina-param: "--library-seq-kit"
        library_seq_protocol:
          type: string
          x-priority: 0
          example: "MiSeq 150 Cycle"
          x-ocarina-param: "--library-seq-protocol"
        library_layout_insert_length:
          type: integer
          x-priority: 100
          x-ocarina-param: "--library-layout-insert-length"
          example: 100
        library_layout_read_length:
          type: integer
          x-priority: 100
          x-ocarina-param: "--library-layout-read-length"
          example: 300
        biosamples:
          type: array
          x-priority: 0
          x-ocarina-param: "--biosample"
          x-ocarina-nargs-root: "biosample"
          items:
            $ref: '#/components/schemas/LibraryBiosample'
        metadata:
          $ref: '#/components/schemas/Metadata'
    BiosampleList:
      title: 'biosample_list'
      type: object
      required:
      - biosamples
      properties:
        biosamples:
          type: array
          items:
            oneOf:
              - type: string
          example: ["BIRM-12345", "BIRM-34567", "BIRM-56789"]
    BiosampleValidityReply:
      title: 'biosample_validity_reply'
      type: object
      required:
      - result
      properties:
        result:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/BiosampleValidity'
    BiosampleValidity:
      title: 'biosample_validity_request'
      type: object
      required:
      - central_sample_id
      - exists
      - has_sender_id
      - has_metadata
      properties:
        central_sample_id:
          type: string
          example: "BIRM-12345"
        exists:
          type: boolean
          description: "if this biosample exists in Majora"
        has_sender_id:
          type: boolean
          description: "if this biosample has a sender_sample_id set"
        has_metadata:
          type: boolean
          description: "if this biosample has evidence of minimal metadata"
    LibraryBiosample:
      title: 'library_biosample'
      type: object
      required:
      - central_sample_id
      - library_selection
      - library_source
      - library_strategy
      properties:
        central_sample_id:
          type: string
          example: "BIRM-12345"
          x-priority: 0
          x-ocarina-nargs-name: "biosample"
          x-ocarina-nargs-pos: 1
        library_selection:
          x-priority: 0
          type: string
          enum: [
            "RANDOM",
            "PCR",
            "RANDOM_PCR",
            "OTHER"
          ]
          example: "PCR"
          x-ocarina-nargs-name: "biosample"
          x-ocarina-nargs-pos: 3
        library_source:
          x-priority: 0
          type: string
          enum: [
            "GENOMIC",
            "TRANSCRIPTOMIC",
            "METAGENOMIC",
            "METATRANSCRIPTOMIC",
            "VIRAL_RNA",
            "OTHER"
          ]
          example: "VIRAL_RNA"
          x-ocarina-nargs-name: "biosample"
          x-ocarina-nargs-pos: 2
        library_strategy:
          x-priority: 0
          type: string
          enum: [
            "WGA",
            "WGS",
            "AMPLICON",
            "TARGETED_CAPTURE",
            "OTHER"
          ]
          example: "AMPLICON"
          x-ocarina-nargs-name: "biosample"
          x-ocarina-nargs-pos: 4
        library_primers:
          type: string
          example: "ARTIC v3"
          x-priority: 2
          x-uploader-column: "artic_primers"
          x-ocarina-nargs-name: "biosample"
          x-ocarina-nargs-pos: 6
        library_protocol:
          type: string
          x-priority: 2
          example: "ARTIC v3 (LoCost)"
          x-uploader-column: "artic_protocol"
          x-ocarina-nargs-name: "biosample"
          x-ocarina-nargs-pos: 5
        barcode:
          type: string
          example: "02"
          x-ocarina-param: null
        sequencing_org_received_date:
          type: string
          format: date
          example: "2021-01-14"
          description: "Date sample was received by the organisation which sequenced it. This date is used for tracking sample turnaround time."
          x-ocarina-param: "--sequencing-org-received-date"
        metadata:
          $ref: '#/components/schemas/BiosamplePoolingMetadata'
    Sequencing:
      title: 'sequencing_process'
      type: object
      required:
      - library_name
      - runs
      properties:
        library_name:
          type: string
          example: "HOOT-LIBRARY-20200322"
          description: "The name of the library as submitted to add_library"
          x-priority: 0
          x-ocarina-param: "--library-name"
        runs:
          type: array
          items:
            $ref: '#/components/schemas/SequencingRun'
    SequencingRun:
      title: 'sequencing_run'
      type: object
      required:
      - run_name
      - instrument_make
      - instrument_model
      properties:
        run_name:
          type: string
          description: "A unique name that corresponds to your run. Ideally, use the name generated by your sequencing instrument."
          example: "YYMMDD_AB000000_1234_ABCDEFGHI0"
          x-priority: 0
          x-ocarina-param: "--run-name"
        instrument_make:
          type: string
          enum: ["ILLUMINA", "OXFORD_NANOPORE", "ION_TORRENT"]
          example: "ILLUMINA"
          x-priority: 0
          x-ocarina-param: "--instrument-make"
        instrument_model:
          type: string
          example: "MiSeq"
          x-priority: 0
          x-ocarina-param: "--instrument-model"
        flowcell_id:
          type: string
          example: "ABCDEF"
          x-ocarina-param: "--flowcell-id"
        flowcell_type:
          example: "v3"
          x-ocarina-param: "--flowcell-type"
        start_time:
          type: string
          format: date-time
          example: "YYYY-MM-DD HH:MM"
          x-ocarina-param: "--start-time"
        end_time:
          type: string
          format: date-time
          example: "YYYY-MM-DD HH:MM"
          x-ocarina-param: "--end-time"
        bioinfo_pipe_name:
          type: string
          description: "The name of the bioinformatics pipeline used for downstream analysis of this run"
          example: "ARTIC Pipeline (iVar)"
          x-priority: 2
          x-ocarina-param: "--bioinfo-pipe-name"
        bioinfo_pipe_version:
          type: string
          description: "The version number of the bioinformatics pipeline used for downstream analysis of this run"
          example: "1.3.0"
          x-priority: 2
          x-ocarina-param: "--bioinfo-pipe-version"
    Metric:
      title: 'metric_base'
      type: object
      properties:
        ct:
          type: object
          properties:
            records:
              type: object
              allOf:
                - $ref: '#/components/schemas/Metric_CycleThreshold'
    Metric_CycleThreshold:
      title: 'metric_ct'
      required: 
      - test_platform
      - test_kit
      - test_target
      - ct_value
      type: object
      properties:
        ct_value:
          type: number
          minimum: 0.0
          description: "Cycle threshold value. Cannot be negative. Code an inconclusive or negative test as 0."
          x-ocarina-namespace: "ct"
          x-uploader-column: "ct_#_ct_value"
          x-uploader-limit: 2
          x-ocarina-param: "ct_value"
          x-ocarina-in-record: True
          example: "25"
        test_kit:
          type: string
          nullable: true
          x-ocarina-namespace: "ct"
          x-ocarina-param: "test_kit"
          x-uploader-column: "ct_#_test_kit"
          x-uploader-limit: 2
          x-ocarina-in-record: True
          example: "INHOUSE"
          enum: [
            "ALTONA",
            "ABBOTT",
            "AUSDIAGNOSTICS",
            "BOSPHORE",
            "ROCHE",
            "INHOUSE",
            "SEEGENE",
            "VIASURE",
            "BD",
            "XPERT",
            "QIASTAT",
            "ALINITY",
            "AMPLIDIAG",
            "TAQPATH_HT",
            null
          ]
        test_platform:
          type: string
          nullable: true
          x-ocarina-namespace: "ct"
          x-ocarina-param: "test_platform"
          x-uploader-column: "ct_#_test_platform"
          x-uploader-limit: 2
          x-ocarina-in-record: True
          example: "INHOUSE"
          enum: [
            "ALTOSTAR_AM16",
            "ABBOTT_M2000",
            "ABBOTT_ALINITY",
            "APPLIED_BIO_7500",
            "ROCHE_COBAS",
            "ROCHE_FLOW",
            "ROCHE_LIGHTCYCLER",
            "ELITE_INGENIUS",
            "CEPHEID_XPERT",
            "QIASTAT_DX",
            "AUSDIAGNOSTICS",
            "INHOUSE",
            "ALTONA",
            "PANTHER",
            "SEEGENE_NIMBUS",
            "QIAGEN_ROTORGENE",
            "BD_MAX",
            "AMPLIDIAG_EASY",
            "THERMO_AMPLITUDE",
            null
          ]
        test_target:
          type: string
          nullable: true
          x-ocarina-namespace: "ct"
          x-ocarina-param: "test_target"
          x-uploader-column: "ct_#_test_target"
          x-uploader-limit: 2
          x-ocarina-in-record: True
          example: "ORF8"
          enum: [
            "E",
            "N",
            "S",
            "RDRP",
            "ORF1AB",
            "ORF8",
            "RDRP+N",
            null
          ]
    Metadata:
      title: 'metadata_base'
      type: object
      additionalProperties:
        type: object
        additionalProperties: true
    BiosamplePoolingMetadata:
      title: 'metadata_biosample'
      type: object
      allOf:
      - $ref: '#/components/schemas/Metadata'
      - type: object
        properties:
          artic:
            type: object
            required:
            - artic_primers
            - artic_protocol
            properties:
              artic_primers:
                type: string
                example: "3"
                x-ocarina-namespace: "artic"
                x-ocarina-param: "primers"
                description: "The version number of the ARTIC primer set (if used) to prepare this library"
                x-uploader-column: "artic_primers"
              artic_protocol:
                type: string
                example: "v3 (LoCost)"
                x-ocarina-namespace: "artic"
                x-ocarina-param: "protocol"
                description: "The version number of the ARTIC protocol (if used) to prepare this library"
                x-uploader-column: "artic_protocol"
    BiosampleMetadata:
      title: 'metadata_biosample'
      type: object
      allOf:
      - $ref: '#/components/schemas/Metadata'
      - type: object
        properties:
          epi:
            type: object
            required:
            - cluster
            properties:
              epi_cluster:
                type: string
                example: "CLUSTER8"
                x-ocarina-namespace: "epi"
                x-ocarina-param: "cluster"
                description: "A local identifier for a known case cluster"
                x-uploader-column: "epi_cluster"
          investigation:
            type: object
            properties:
              investigation_name:
                type: string
                example: "West Midlands HCW"
                description: "A named investigation (eg. a surveillance or directed case group)"
                x-ocarina-namespace: "investigation"
                x-ocarina-param: "name"
                x-uploader-column: "investigation_name"
              investigation_site:
                type: string
                example: "QEHB"
                x-ocarina-namespace: "investigation"
                x-ocarina-param: "site"
                description: "An optional site name or code to differentiate between sites if the investigation covers more than one site."
                x-uploader-column: "investigation_site"
              investigation_cluster:
                type: string
                example: "Ward 0"
                description: "An optional identifier for a cluster within an investigation"
                x-ocarina-param: "cluster"
                x-ocarina-namespace: "investigation"
                x-uploader-column: "investigation_cluster"
    PAGSupressRequest:
      title: 'suppress_pag'
      type: object
      allOf:
        - type: object
          required:
          - publish_group
          - reason
          properties:
            publish_group:
              type: string
              example: "COGUK/BIRM-12345/BIRM:YYMMDD_AB000000_1234_ABCDEFGHI0"
              description: "Published Artifact Group (PAG) name"
              x-ocarina-param: "--publish-group"
              x-priority: 0
            reason:
              type: string
              enum: ["WRONG_BARCODE", "WRONG_METADATA", "WRONG_SEQUENCE", "CONTROL_FAIL"]
              example: "WRONG_SEQUENCE"
              x-ocarina-param: "--reason"
              x-priority: 0
